// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Autentica o usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Autentica o usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registra um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registrar um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/position/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of positions for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "position"
                ],
                "summary": "List user positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user positions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/realized-pnl/get": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of PNL for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pnl"
                ],
                "summary": "List user Profit and Loss",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user PNL",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.RealizedPNL"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transaction/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adiciona uma nova Transação ao sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Adiciona uma nova Transação",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transaction data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.AddTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transaction/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a Transaction from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Deletes a Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transaction details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.DeleteTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "senha123"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "joao@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "João Silva"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "senha123"
                }
            }
        },
        "domain.AssetType": {
            "type": "string",
            "enum": [
                "CRYPTO",
                "STOCK",
                "ETF"
            ],
            "x-enum-varnames": [
                "Crypto",
                "Stock",
                "ETF"
            ]
        },
        "domain.OperationType": {
            "type": "string",
            "enum": [
                "BUY",
                "SELL"
            ],
            "x-enum-varnames": [
                "Buy",
                "Sell"
            ]
        },
        "domain.Position": {
            "type": "object",
            "properties": {
                "asset_symbol": {
                    "description": "Asset symbol",
                    "type": "string"
                },
                "asset_type": {
                    "description": "Asset type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AssetType"
                        }
                    ]
                },
                "average_cost_brl": {
                    "description": "Average cost in BRL",
                    "type": "number"
                },
                "average_cost_usd": {
                    "description": "Average cost in USD",
                    "type": "number"
                },
                "created_at": {
                    "description": "Creation date",
                    "type": "string"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "number"
                },
                "total_cost_brl": {
                    "description": "Total cost in BRL",
                    "type": "number"
                },
                "total_cost_usd": {
                    "description": "Total cost in USD",
                    "type": "number"
                },
                "user_id": {
                    "description": "User UUID",
                    "type": "string"
                }
            }
        },
        "domain.RealizedPNL": {
            "type": "object",
            "properties": {
                "asset_symbol": {
                    "description": "Asset symbol",
                    "type": "string"
                },
                "asset_type": {
                    "description": "Asset type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AssetType"
                        }
                    ]
                },
                "average_cost_brl": {
                    "description": "Average cost in BRL",
                    "type": "number"
                },
                "average_cost_usd": {
                    "description": "Average cost in USD",
                    "type": "number"
                },
                "created_at": {
                    "description": "Creation date",
                    "type": "string"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "number"
                },
                "realized_profit_brl": {
                    "description": "Realized profit in BRL",
                    "type": "number"
                },
                "realized_profit_usd": {
                    "description": "Realized profit in USD",
                    "type": "number"
                },
                "selling_price_brl": {
                    "description": "Selling price in BRL",
                    "type": "number"
                },
                "selling_price_usd": {
                    "description": "Selling price in USD",
                    "type": "number"
                },
                "total_cost_brl": {
                    "description": "Total cost in BRL",
                    "type": "number"
                },
                "total_cost_usd": {
                    "description": "Total cost in USD",
                    "type": "number"
                },
                "total_value_sold_brl": {
                    "description": "Total value sold in BRL",
                    "type": "number"
                },
                "total_value_sold_usd": {
                    "description": "Total value sold in USD",
                    "type": "number"
                },
                "user_id": {
                    "description": "User UUID",
                    "type": "string"
                }
            }
        },
        "domain.Transaction": {
            "type": "object",
            "properties": {
                "asset_symbol": {
                    "description": "Asset symbol",
                    "type": "string"
                },
                "asset_type": {
                    "description": "Asset type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AssetType"
                        }
                    ]
                },
                "created_at": {
                    "description": "Creation date",
                    "type": "string"
                },
                "id": {
                    "description": "UUID",
                    "type": "string"
                },
                "operation_date": {
                    "description": "Operation date",
                    "type": "string"
                },
                "price_in_brl": {
                    "description": "Price in BRL",
                    "type": "number"
                },
                "price_in_usd": {
                    "description": "Price in USD",
                    "type": "number"
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "number"
                },
                "total_cost_brl": {
                    "description": "Total cost in BRL",
                    "type": "number"
                },
                "total_cost_usd": {
                    "description": "Total cost in USD",
                    "type": "number"
                },
                "type": {
                    "description": "Operation type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.OperationType"
                        }
                    ]
                },
                "usd_brl_rate": {
                    "description": "USD/BRL exchange rate",
                    "type": "number"
                },
                "user_id": {
                    "description": "User UUID",
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "transaction.AddTransactionRequest": {
            "type": "object",
            "required": [
                "asset_symbol",
                "asset_type",
                "operation_date",
                "price_in_usd",
                "quantity",
                "type"
            ],
            "properties": {
                "asset_symbol": {
                    "description": "Asset symbol",
                    "type": "string",
                    "example": "AAPL"
                },
                "asset_type": {
                    "description": "Asset type",
                    "enum": [
                        "CRYPTO",
                        "STOCK",
                        "ETF"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AssetType"
                        }
                    ],
                    "example": "STOCK"
                },
                "operation_date": {
                    "description": "Operation date",
                    "type": "string",
                    "example": "2025-02-11"
                },
                "price_in_usd": {
                    "description": "Price in USD",
                    "type": "number",
                    "minimum": 0,
                    "example": 50
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "number",
                    "minimum": 0,
                    "example": 20
                },
                "type": {
                    "description": "Operation type",
                    "enum": [
                        "BUY",
                        "SELL"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.OperationType"
                        }
                    ],
                    "example": "BUY"
                }
            }
        },
        "transaction.DeleteTransactionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "d081b7c0-b3b6-49ba-a9b7-86b56a65fb89"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "IRGlobal API",
	Description:      "API para o sistema IRGlobal",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
