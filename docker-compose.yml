services:
  postgres:
    image: postgres:14
    container_name: irglobal_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    ports:
      - "5432:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - irglobal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: irglobal_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:${BACKEND_PORT}"
    volumes:
      - ./backend:/app/src
    networks:
      - irglobal_network

  frontend:
    build:
      context: ./frontend/IRGlobal
      dockerfile: Dockerfile
    container_name: irglobal_frontend
    restart: always
    depends_on:
      - backend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - irglobal_network

volumes:
  postgres_data:
    name: irglobal_postgres_data

networks:
  irglobal_network:
    name: irglobal_network
